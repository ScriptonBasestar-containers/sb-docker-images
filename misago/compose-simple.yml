# Misago - Python Forum (간단한 개발 환경)
# 공식: https://github.com/rafalp/misago_docker
#
# 프로덕션 환경은 공식 misago_docker 사용 권장:
# git clone https://github.com/rafalp/misago_docker.git
# cd misago_docker && ./appctl setup

services:
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: misago
      POSTGRES_USER: misago
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-passw0rd}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U misago"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8.2-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-passw0rd}
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  misago:
    # 공식 이미지 (GitHub Container Registry)
    image: ghcr.io/rafalp/misago:latest
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Database
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: misago
      POSTGRES_USER: misago
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-passw0rd}

      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD:-passw0rd}@redis:6379/0

      # Django
      SECRET_KEY: ${SECRET_KEY:-change-me-in-production-use-random-50-chars}
      ALLOWED_HOSTS: localhost,127.0.0.1
      DEBUG: ${DEBUG:-true}

      # Misago
      MISAGO_ADDRESS: http://localhost:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - misago-media:/misago/media
      - misago-static:/misago/static
      - misago-userdata:/misago/userdata

  # Celery worker for async tasks
  celery:
    image: ghcr.io/rafalp/misago:latest
    restart: unless-stopped
    command: celery -A misago worker --loglevel=info
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: misago
      POSTGRES_USER: misago
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-passw0rd}
      REDIS_URL: redis://:${REDIS_PASSWORD:-passw0rd}@redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-change-me-in-production-use-random-50-chars}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - misago-media:/misago/media
      - misago-userdata:/misago/userdata

volumes:
  postgres-data:
  redis-data:
  misago-media:
  misago-static:
  misago-userdata:

networks:
  default:
    name: misago-network
