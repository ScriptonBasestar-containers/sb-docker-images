name: Publish Docker image

#on:
#  push:
#    paths:
#      - 'service1/**'
#      - 'service2/**'
#  pull_request:
#    paths:
#      - 'service1/**'
#      - 'service2/**'

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read
#      attestations: write
#      id-token: write

    strategy:
      matrix:
        service: ${{ fromJson(env.services) }}
#        service:
#          - name: service1
#            path: service1
#          - name: service2
#            path: service2

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name/app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service.path }}
          file: ./${{ matrix.service.path }}/Dockerfile
          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service.name }}:latest
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        if: ${{ github.event.head_commit.message == '' || contains(github.event.head_commit.message, matrix.service.path) }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
